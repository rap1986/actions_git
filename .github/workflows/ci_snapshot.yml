name: CI - Snapshot
run-name: CI snapshot disparada por ${{ github.actor }}

on:
  workflow_call:
    inputs:
      tipo_versao:
        type: string
        description: Versão do artefato (patch, minor, major, snapshot)
      node_versao:
        type: string
        description: Versão do node
      node_compilar_pastas:
        type: string
        description: Pastas do projeto node
      node_artefatos:
        type: string
        description: Arquivos/Artefatos da versão final

permissions:
  contents: write

jobs:
  GerarVersao:
    runs-on: ubuntu-latest
    permissions: read-all
    outputs:
      versao: ${{ steps.versao.outputs.versao }}
    steps:
      - name: Baixando o repositório
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          path: build

      - name: Baixando o repositório com os scripts
        uses: actions/checkout@v4
        with:
          repository: rap1986/actions_git
          #token: ${{ secrets.PIPELINE_TOKEN }}
          path: scripts

      - name: Lista os arquivos para conferência
        run: |
          ls ${{ github.workspace }}
          ls ${{ github.workspace }}/scripts

      - name: Coleta a próxima versão
        id: versao
        uses: ./scripts/.github/actions/proxima_versao
        with:
          tipo_versao: ${{ inputs.tipo_versao }}
          token: ${{ secrets.GITHUB_TOKEN }}

  Build:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: GerarVersao
    if: "${{ inputs.node_versao != '' }}"
    steps:
      - name: Baixando o repositório
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          path: build

      - name: Baixando o repositório com os scripts
        uses: actions/checkout@v4
        with:
          repository: rap1986/actions_git
          #token: ${{ secrets.PIPELINE_TOKEN }}
          path: scripts

      - name: Build o projeto
        id: versao
        uses: ./scripts/.github/actions/compilar
        with:
          node_versao: ${{ inputs.node_versao }}
          node_compilar_pastas: ${{ inputs.node_compilar_pastas }}

      - name: Compacta(Zip) as pastas
        shell: bash
        run: |
          mkdir artefato
          zip -r artefato.zip -r ${{ inputs.node_artefatos }}
          ls artefato

      - name: Criar Versão / Release e Tag
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: Release ${{ needs.GerarVersao.outputs.versao }}
          tag_name: ${{needs.GerarVersao.outputs.versao}}
          files: artefato.zip
